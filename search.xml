<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>iPhone等比例适配UI</title>
      <link href="2020/12/15/iPhone%E7%AD%89%E6%AF%94%E4%BE%8B%E9%80%82%E9%85%8DUI/"/>
      <url>2020/12/15/iPhone%E7%AD%89%E6%AF%94%E4%BE%8B%E9%80%82%E9%85%8DUI/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>寻找一种精准适配各个屏幕尺寸的方案.<br>apple发布的设备屏幕比例和历史经验告诉我们,等比适配是我们目前精准适配重要的一步.<br>目前的需求是适配iPhone 5 - iPhone 12 pro max.</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h3 id="UI适配"><a href="#UI适配" class="headerlink" title="UI适配"></a>UI适配</h3><p>如何做好等比适配呢?</p><ul><li>曾经我们使用宏定义这种方案,以6/6s为基准提取宽度和高度缩小系数<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#define kJLXWidthScale [UIScreen mainScreen].bounds.size.width/375.0 </span><br><span class="line"></span><br><span class="line">#define kJLXHeightScale [UIScreen mainScreen].bounds.size.height/667.0 </span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>使用时将其进行系数乘积(宽度<em>宽度系数,高度</em>高度系数).</li></ul><p>示例:<br> 如果此时需要展示一个20<em>20的UI,经过适配之后则是(20</em> kJLXWidthScale)<em>(20</em> kJLXHeightScale),此时,很容易出现一个问题,如果当前的屏幕不再是16:9这样的比例,那还是正方形吗?</p><p>很明显不是,那如何来处理呢?</p><p>我的想法是只采用单一方向的比例,如果比例为19.5:9时,显示更多的数据来填充剩余的部分.<br>如:(20* kJLXWidthScale)<em>(20</em> kJLXWidthScale)</p><ul><li>进一步优化,使用NSNumber的分类内部处理</li></ul><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- (double)cms_auto {</span><br><span class="line">    if (self == nil) { return 0; }</span><br><span class="line">    </span><br><span class="line">    if ([UIDevice currentDevice].userInterfaceIdiom != UIUserInterfaceIdiomPhone) {</span><br><span class="line">        return self.doubleValue;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    CGFloat baseWith = 375;</span><br><span class="line">    CGFloat currentWith = MIN([UIScreen mainScreen].bounds.size.width, [UIScreen mainScreen].bounds.size.height);</span><br><span class="line">    </span><br><span class="line">    return self.doubleValue * (currentWith / baseWith);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>对于需要进行精准匹配的内容可以使用自定义的api,按照屏幕尺寸进行处理<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">typedef NSNumber * _Nonnull (^CMSConfigSize)(NSInteger num);</span><br><span class="line">@property (nonatomic, copy, readonly) CMSConfigSize i3_5;</span><br><span class="line">@property (nonatomic, copy, readonly) CMSConfigSize i4_0;</span><br><span class="line">@property (nonatomic, copy, readonly) CMSConfigSize i4_7;</span><br><span class="line">- (CMSConfigSize)i3_5 {</span><br><span class="line">    return ^(NSInteger num){</span><br><span class="line">        return [NSNumber inchType] == CMSInchTypeI35 ? @(num) : self;</span><br><span class="line">    };</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">- (CMSConfigSize)i4_0 {</span><br><span class="line">    return ^(NSInteger num){</span><br><span class="line">        return [NSNumber inchType] == CMSInchTypeI40 ? @(num) : self;</span><br><span class="line">    };</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">- (CMSConfigSize)i4_7 {</span><br><span class="line">    return ^(NSInteger num){</span><br><span class="line">        return [NSNumber inchType] == CMSInchTypeI47 ? @(num) : self;</span><br><span class="line">    };</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><p>使用方式</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSLog(@"%f", @(375).i3_5(35).i4_0(40).i4_7(47).i6_5(65).i6_1(61).i5_8(58).i5_5(55).i5_4(54).doubleValue);</span><br></pre></td></tr></tbody></table></figure><h3 id="字体适配"><a href="#字体适配" class="headerlink" title="字体适配"></a>字体适配</h3><ul><li><p>自定义api的方式</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">typedef enum : NSUInteger {</span><br><span class="line">    CMSFontTypeRegular,</span><br><span class="line">    CMSFontTypeLight,</span><br><span class="line">    CMSFontTypeMedium</span><br><span class="line">} CMSFontType;</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">@interface UIFont (CMSExtension)</span><br><span class="line">+ (UIFont *)cms_fontRegularOfSize:(CGFloat)size;</span><br><span class="line">+ (UIFont *)cms_fontLightOfSize:(CGFloat)size;</span><br><span class="line">+ (UIFont *)cms_fontMediumOfSize:(CGFloat)size;</span><br><span class="line">+ (UIFont *)cms_fontOfSize:(CGFloat)size fontType:(CMSFontType)fontType;</span><br><span class="line">@end</span><br><span class="line">@implementation UIFont (CMSExtension)</span><br><span class="line"></span><br><span class="line">+ (UIFont *)cms_fontLightOfSize:(CGFloat)size {</span><br><span class="line">    return [self cms_fontOfSize:size fontType:(CMSFontTypeLight)];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">+ (UIFont *)cms_fontMediumOfSize:(CGFloat)size {</span><br><span class="line">    return [self cms_fontOfSize:size fontType:(CMSFontTypeMedium)];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">+ (UIFont *)cms_fontRegularOfSize:(CGFloat)size {</span><br><span class="line">    return [self cms_fontOfSize:size fontType:(CMSFontTypeRegular)];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">+ (UIFont *)cms_fontOfSize:(CGFloat)size fontType:(CMSFontType)fontType {</span><br><span class="line">    size = @(size).cms_auto;</span><br><span class="line">    NSDictionary&lt;NSNumber *, NSString *&gt; *fontDict = @{</span><br><span class="line">        @(CMSFontTypeLight): @"PingFangSC-Light",</span><br><span class="line">        @(CMSFontTypeMedium): @"PingFangSC-Medium",</span><br><span class="line">        @(CMSFontTypeRegular): @"PingFangSC-Regular"</span><br><span class="line">    };</span><br><span class="line">    </span><br><span class="line">    UIFont *currentFont = nil;</span><br><span class="line">    </span><br><span class="line">    NSString *typeStr = [fontDict objectForKey:@(fontType)];</span><br><span class="line">    if (typeStr == nil || typeStr.length &lt;= 0) {</span><br><span class="line">        currentFont = [UIFont systemFontOfSize:size];</span><br><span class="line">    } else {</span><br><span class="line">        currentFont = [UIFont fontWithName:typeStr size:size];</span><br><span class="line">    }</span><br><span class="line">    return currentFont;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></tbody></table></figure></li><li><p>runtime的方式</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line">#import "UIFont+CMSHook.h"</span><br><span class="line">#import &lt;objc/runtime.h&gt;</span><br><span class="line">#import "NSNumber+CMSExtension.h"</span><br><span class="line"></span><br><span class="line">@implementation NSObject (CMSHook)</span><br><span class="line"></span><br><span class="line">//封装的method-swizzling方法</span><br><span class="line">+ (void)cms_bestClassMethodSwizzlingWithClass:(Class)cls oriSEL:(SEL)oriSEL swizzledSEL:(SEL)swizzledSEL{</span><br><span class="line">    </span><br><span class="line">    if (!cls) NSLog(@"传入的交换类不能为空");</span><br><span class="line"></span><br><span class="line">    Method oriMethod = class_getClassMethod([cls class], oriSEL);</span><br><span class="line">    Method swiMethod = class_getClassMethod([cls class], swizzledSEL);</span><br><span class="line">    </span><br><span class="line">    if (!oriMethod) { // 避免动作没有意义</span><br><span class="line">        // 在oriMethod为nil时，替换后将swizzledSEL复制一个不做任何事的空实现,代码如下:</span><br><span class="line">        class_addMethod(object_getClass(cls), oriSEL, method_getImplementation(swiMethod), method_getTypeEncoding(swiMethod));</span><br><span class="line">        method_setImplementation(swiMethod, imp_implementationWithBlock(^(id self, SEL _cmd){</span><br><span class="line">            NSLog(@"来了一个空的 imp");</span><br><span class="line">        }));</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    // 一般交换方法: 交换自己有的方法 -- 走下面 因为自己有意味添加方法失败</span><br><span class="line">    // 交换自己没有实现的方法:</span><br><span class="line">    //   首先第一步:会先尝试给自己添加要交换的方法 :personInstanceMethod (SEL) -&gt; swiMethod(IMP)</span><br><span class="line">    //   然后再将父类的IMP给swizzle  personInstanceMethod(imp) -&gt; swizzledSEL</span><br><span class="line">    //oriSEL:personInstanceMethod</span><br><span class="line"></span><br><span class="line">    BOOL didAddMethod = class_addMethod(object_getClass(cls), oriSEL, method_getImplementation(swiMethod), method_getTypeEncoding(swiMethod));</span><br><span class="line">    </span><br><span class="line">    if (didAddMethod) {</span><br><span class="line">        class_replaceMethod(object_getClass(cls), swizzledSEL, method_getImplementation(oriMethod), method_getTypeEncoding(oriMethod));</span><br><span class="line">    }else{</span><br><span class="line">        method_exchangeImplementations(oriMethod, swiMethod);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">+ (void)cms_bestMethodSwizzlingWithClass:(Class)cls oriSEL:(SEL)oriSEL swizzledSEL:(SEL)swizzledSEL{</span><br><span class="line">    </span><br><span class="line">    if (!cls) NSLog(@"传入的交换类不能为空");</span><br><span class="line">    </span><br><span class="line">    Method oriMethod = class_getInstanceMethod(cls, oriSEL);</span><br><span class="line">    Method swiMethod = class_getInstanceMethod(cls, swizzledSEL);</span><br><span class="line">    </span><br><span class="line">    if (!oriMethod) {</span><br><span class="line">        // 在oriMethod为nil时，替换后将swizzledSEL复制一个不做任何事的空实现,代码如下:</span><br><span class="line">        class_addMethod(cls, oriSEL, method_getImplementation(swiMethod), method_getTypeEncoding(swiMethod));</span><br><span class="line">        method_setImplementation(swiMethod, imp_implementationWithBlock(^(id self, SEL _cmd){ }));</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    // 一般交换方法: 交换自己有的方法 -- 走下面 因为自己有意味添加方法失败</span><br><span class="line">    // 交换自己没有实现的方法:</span><br><span class="line">    //   首先第一步:会先尝试给自己添加要交换的方法 :personInstanceMethod (SEL) -&gt; swiMethod(IMP)</span><br><span class="line">    //   然后再将父类的IMP给swizzle  personInstanceMethod(imp) -&gt; swizzledSEL</span><br><span class="line">    //oriSEL:personInstanceMethod</span><br><span class="line"></span><br><span class="line">    BOOL didAddMethod = class_addMethod(cls, oriSEL, method_getImplementation(swiMethod), method_getTypeEncoding(swiMethod));</span><br><span class="line">    if (didAddMethod) {</span><br><span class="line">        class_replaceMethod(cls, swizzledSEL, method_getImplementation(oriMethod), method_getTypeEncoding(oriMethod));</span><br><span class="line">    }else{</span><br><span class="line">        method_exchangeImplementations(oriMethod, swiMethod);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation UIFont (CMSHook)</span><br><span class="line"></span><br><span class="line">+ (void)load {</span><br><span class="line">    [super load];</span><br><span class="line">    </span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^{</span><br><span class="line">        [NSObject cms_bestClassMethodSwizzlingWithClass:self oriSEL:@selector(systemFontOfSize:) swizzledSEL:@selector(cms_systemFontOfSize:)];</span><br><span class="line">        [NSObject cms_bestClassMethodSwizzlingWithClass:self oriSEL:@selector(boldSystemFontOfSize:) swizzledSEL:@selector(cms_boldSystemFontOfSize:)];</span><br><span class="line">        [NSObject cms_bestClassMethodSwizzlingWithClass:self oriSEL:@selector(italicSystemFontOfSize:) swizzledSEL:@selector(cms_italicSystemFontOfSize:)];</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">+ (UIFont *)cms_systemFontOfSize:(CGFloat)fontSize {</span><br><span class="line">    fontSize = @(fontSize).cms_auto;</span><br><span class="line">//    UIFont * font = [UIFont fontWithName:@"FZSEK--GBK1-0" size:fontSize];</span><br><span class="line">//    if (!font) {</span><br><span class="line">        return [self cms_systemFontOfSize:fontSize];</span><br><span class="line">//    }</span><br><span class="line">//    return font;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">+ (UIFont *)cms_boldSystemFontOfSize:(CGFloat)fontSize {</span><br><span class="line">    fontSize = @(fontSize).cms_auto;</span><br><span class="line">//    UIFont * font = [UIFont fontWithName:@"FZSEK--GBK1-0" size:fontSize];</span><br><span class="line">//    if (!font) {</span><br><span class="line">        return [self cms_boldSystemFontOfSize:fontSize];</span><br><span class="line">//    }</span><br><span class="line">//    return font;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">+ (UIFont *)cms_italicSystemFontOfSize:(CGFloat)fontSize {</span><br><span class="line">    fontSize = @(fontSize).cms_auto;</span><br><span class="line">//    UIFont * font = [UIFont fontWithName:@"FZSEK--GBK1-0" size:fontSize];</span><br><span class="line">//    if (!font) {</span><br><span class="line">        return [self cms_italicSystemFontOfSize:fontSize];</span><br><span class="line">//    }</span><br><span class="line">//    return font;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation UILabel (CMSHook)</span><br><span class="line"></span><br><span class="line">+ (void)load {</span><br><span class="line">    [super load];</span><br><span class="line">    </span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^{</span><br><span class="line">        [NSObject cms_bestMethodSwizzlingWithClass:self oriSEL:@selector(init) swizzledSEL:@selector(cms_init)];</span><br><span class="line">        [NSObject cms_bestMethodSwizzlingWithClass:self oriSEL:@selector(initWithCoder:) swizzledSEL:@selector(cms_initWithCoder:)];</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">- (instancetype)cms_init {</span><br><span class="line">   id __self = [self cms_init];</span><br><span class="line">   UIFont * font = [UIFont systemFontOfSize:self.font.pointSize];</span><br><span class="line">   if (font) {</span><br><span class="line">       self.font=font;</span><br><span class="line">   }</span><br><span class="line">   return __self;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">- (id)cms_initWithCoder:(NSCoder*)aDecode{</span><br><span class="line">    [self cms_initWithCoder:aDecode];</span><br><span class="line">    if (self) {</span><br><span class="line">        //部分不像改变字体的 把tag值设置成333跳过</span><br><span class="line">        if(self.tag != 333){</span><br><span class="line">            CGFloat fontSize = self.font.pointSize;</span><br><span class="line">            self.font = [UIFont systemFontOfSize:fontSize];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return self;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@implementation UITextField (CMSHook)</span><br><span class="line">+ (void)load {</span><br><span class="line">    [super load];</span><br><span class="line">    </span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^{</span><br><span class="line">        [NSObject cms_bestMethodSwizzlingWithClass:self oriSEL:@selector(initWithCoder:) swizzledSEL:@selector(cms_initWithCoder:)];</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">- (id)cms_initWithCoder:(NSCoder*)aDecode{</span><br><span class="line">    [self cms_initWithCoder:aDecode];</span><br><span class="line">    if (self) {</span><br><span class="line">        //部分不像改变字体的 把tag值设置成333跳过</span><br><span class="line">        if(self.tag != 333){</span><br><span class="line">            self.font = [UIFont systemFontOfSize:self.font.pointSize];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return self;</span><br><span class="line">}</span><br><span class="line">@end</span><br><span class="line">@implementation UIButton (CMSHook)</span><br><span class="line">+ (void)load {</span><br><span class="line">    [super load];</span><br><span class="line">    </span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^{</span><br><span class="line">        [NSObject cms_bestMethodSwizzlingWithClass:self oriSEL:@selector(initWithCoder:) swizzledSEL:@selector(cms_initWithCoder:)];</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">- (id)cms_initWithCoder:(NSCoder*)aDecode{</span><br><span class="line">    [self cms_initWithCoder:aDecode];</span><br><span class="line">    if (self) {</span><br><span class="line">        //部分不像改变字体的 把tag值设置成333跳过</span><br><span class="line">        if(self.tag != 333){</span><br><span class="line">            self.titleLabel.font = [UIFont systemFontOfSize:self.titleLabel.font.pointSize];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return self;</span><br><span class="line">}</span><br><span class="line">@end</span><br><span class="line">@implementation UITextView (CMSHook)</span><br><span class="line">+ (void)load {</span><br><span class="line">    [super load];</span><br><span class="line">    </span><br><span class="line">    static dispatch_once_t onceToken;</span><br><span class="line">    dispatch_once(&amp;onceToken, ^{</span><br><span class="line">        [NSObject cms_bestMethodSwizzlingWithClass:self oriSEL:@selector(initWithCoder:) swizzledSEL:@selector(cms_initWithCoder:)];</span><br><span class="line">    });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">- (id)cms_initWithCoder:(NSCoder*)aDecode{</span><br><span class="line">    [self cms_initWithCoder:aDecode];</span><br><span class="line">    if (self) {</span><br><span class="line">        //部分不像改变字体的 把tag值设置成333跳过</span><br><span class="line">        if(self.tag != 333){</span><br><span class="line">            self.font = [UIFont systemFontOfSize:self.font.pointSize];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return self;</span><br><span class="line">}</span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li></ul><h1 id="关于2020年及之前发布的设备相关信息如下表"><a href="#关于2020年及之前发布的设备相关信息如下表" class="headerlink" title="关于2020年及之前发布的设备相关信息如下表"></a>关于2020年及之前发布的设备相关信息如下表</h1><table><thead><tr><th align="left">第几代</th><th align="center">手机型号</th><th align="right">屏幕尺寸(英寸)</th><th align="left">分辨率(像素)</th><th align="left">屏幕密度(ppi)</th><th align="left">开发尺寸(pt)</th><th align="left">倍图</th><th align="left">屏幕比例</th></tr></thead><tbody><tr><td align="left">1</td><td align="center">iPhone 2G</td><td align="right">3.5</td><td align="left">320*480</td><td align="left"></td><td align="left">320*480</td><td align="left"></td><td align="left">3:2</td></tr><tr><td align="left">2</td><td align="center">iPhone 3G</td><td align="right">3.5</td><td align="left">320*480</td><td align="left"></td><td align="left">320*480</td><td align="left"></td><td align="left">3:2</td></tr><tr><td align="left">3</td><td align="center">iPhone 3GS</td><td align="right">3.5</td><td align="left">320*480</td><td align="left"></td><td align="left">320*480</td><td align="left"></td><td align="left">3:2</td></tr><tr><td align="left">4</td><td align="center">iPhone 4</td><td align="right">3.5</td><td align="left">960*640</td><td align="left">326</td><td align="left">320*480</td><td align="left">2</td><td align="left">3:2</td></tr><tr><td align="left">5</td><td align="center">iPhone 4s</td><td align="right">3.5</td><td align="left">960*640</td><td align="left">326</td><td align="left">320*480</td><td align="left">2</td><td align="left">3:2</td></tr><tr><td align="left">6</td><td align="center">iPhone 5</td><td align="right">4</td><td align="left">1136*640</td><td align="left">326</td><td align="left">320*568</td><td align="left">2</td><td align="left">16:9</td></tr><tr><td align="left">7</td><td align="center">iPhone 5s</td><td align="right">4</td><td align="left">1136*640</td><td align="left">326</td><td align="left">320*568</td><td align="left">2</td><td align="left">16:9</td></tr><tr><td align="left"></td><td align="center">iPhone 5c</td><td align="right">4</td><td align="left">1136*640</td><td align="left">326</td><td align="left">320*568</td><td align="left">2</td><td align="left">16:9</td></tr><tr><td align="left">8</td><td align="center">iPhone 6</td><td align="right">4.7</td><td align="left">1334*750</td><td align="left">326</td><td align="left">375*667</td><td align="left">2</td><td align="left">16:9</td></tr><tr><td align="left"></td><td align="center">iPhone 6 Plus</td><td align="right">5.5</td><td align="left">1920*1080</td><td align="left">401</td><td align="left">414*736</td><td align="left">3</td><td align="left">16:9</td></tr><tr><td align="left">9</td><td align="center">iPhone 6s</td><td align="right">4.7</td><td align="left">1334*750</td><td align="left">326</td><td align="left">375*667</td><td align="left">2</td><td align="left">16:9</td></tr><tr><td align="left"></td><td align="center">iPhone 6s Plus</td><td align="right">5.5</td><td align="left">1920*1080</td><td align="left">401</td><td align="left">414*736</td><td align="left">3</td><td align="left">16:9</td></tr><tr><td align="left">10</td><td align="center">iPhone 7</td><td align="right">4.7</td><td align="left">1334*750</td><td align="left">326</td><td align="left">375*667</td><td align="left">2</td><td align="left">16:9</td></tr><tr><td align="left"></td><td align="center">iPhone 7 Plus</td><td align="right">5.5</td><td align="left">1920*1080</td><td align="left">401</td><td align="left">414*736</td><td align="left">3</td><td align="left">16:9</td></tr><tr><td align="left">11</td><td align="center">iPhone 8</td><td align="right">4.7</td><td align="left">1334*750</td><td align="left">326</td><td align="left">375*667</td><td align="left">2</td><td align="left">16:9</td></tr><tr><td align="left"></td><td align="center">iPhone 8 Plus</td><td align="right">5.5</td><td align="left">1920*1080</td><td align="left">401</td><td align="left">414*736</td><td align="left">3</td><td align="left">16:9</td></tr><tr><td align="left"></td><td align="center">iPhone X</td><td align="right">5.8</td><td align="left">2436*1125</td><td align="left">458</td><td align="left">375*812</td><td align="left">3</td><td align="left">19.5：9</td></tr><tr><td align="left">12</td><td align="center">iPhone XS</td><td align="right">5.8</td><td align="left">2436*1125</td><td align="left">458</td><td align="left">375*812</td><td align="left">3</td><td align="left">19.5：9</td></tr><tr><td align="left"></td><td align="center">iPhone XR</td><td align="right">6.1</td><td align="left">828*1792</td><td align="left">326</td><td align="left">414*896</td><td align="left">2</td><td align="left">19.5：9</td></tr><tr><td align="left"></td><td align="center">iPhone XS Max</td><td align="right">6.5</td><td align="left">2688*1242</td><td align="left">458</td><td align="left">414*896</td><td align="left">3</td><td align="left">19.5：9</td></tr><tr><td align="left">13</td><td align="center">iPhone 11</td><td align="right">6.1</td><td align="left">1792 * 828</td><td align="left">326</td><td align="left">414*896</td><td align="left"></td><td align="left">19.5：9</td></tr><tr><td align="left"></td><td align="center">iPhone 11 Pro</td><td align="right">5.8</td><td align="left">2436 x 1125</td><td align="left">458</td><td align="left">375*812</td><td align="left"></td><td align="left">19.5：9</td></tr><tr><td align="left"></td><td align="center">iPhone 11 Pro&nbsp;Max</td><td align="right">6.5</td><td align="left">2688 x 1242</td><td align="left">458</td><td align="left">414*896</td><td align="left"></td><td align="left">19.5：9</td></tr><tr><td align="left">14</td><td align="center">iPhone 12</td><td align="right">6.1</td><td align="left">2532*1170</td><td align="left">460</td><td align="left">390*844</td><td align="left">3</td><td align="left">19.5：9</td></tr><tr><td align="left"></td><td align="center">iPhone 12 mini</td><td align="right">5.4</td><td align="left">2340*1080</td><td align="left">476</td><td align="left">375*812</td><td align="left">3</td><td align="left">19.5：9</td></tr><tr><td align="left"></td><td align="center">iPhone 12 Pro&nbsp;Max</td><td align="right">6.7</td><td align="left">2778*1284</td><td align="left">458</td><td align="left">428*926</td><td align="left">3</td><td align="left">19.5：9</td></tr><tr><td align="left"></td><td align="center">iPhone 12 Pro</td><td align="right">6.1</td><td align="left">2532*1170</td><td align="left">460</td><td align="left">390*844</td><td align="left">3</td><td align="left">19.5：9</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="2020/12/11/test/"/>
      <url>2020/12/11/test/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/12/11/hello-world/"/>
      <url>2020/12/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
